general {
    base_exp_dir = ./exp/CASE_NAME/ours
    recording = [
        ./,
        ./models
    ]
}

dataset {
    data_dir = ./data/HO3Dv3/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    loftr_interval_flow_dir = ./data/HO3Dv3/matches
    crop = True
    partial_ann = True
    mask_init = True
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 300000

    batch_size = 512
    validate_resolution_level = 1
    warm_up_end = 5000
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 10000
    val_freq = 2500
    val_mesh_freq = 5000
    report_freq = 100
    pose_freq = 3000

    igr_weight = 0.1
    mask_weight = 5
    flow_weight = 0.1
    depth_weight = 0

    progressive = True
    flow_interval = 10

    pose_lr = 5e-4
    pose_alpha = 0.5
    max_pro_iteration = 1000
    pro_warm_up_end = 500
    image_interval = 1
    current_image = 1

    mesh_warmup_step = 1000
    emphasize_rot = True

    mask_guided_sampling = True
    mask_guided_patch_size = 10

    reset_based_on_rot = True
    reset_rot_threshold = 60

    maintain_shape = True
}

model {
    pose_type = seg
    barf = True
    
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 257
        "d_in" = 3
        "d_hidden" = 256
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 9
        "d_out" = 3
        "d_hidden" = 256
        n_layers = 4
        weight_norm = True
        multires_view = 4
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 32
        n_importance = 0
        n_outside = 0
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }
}
